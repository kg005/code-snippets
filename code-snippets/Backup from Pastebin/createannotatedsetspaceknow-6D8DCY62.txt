
import os
import shutil
from sys import argv


def count_files(dir):
    count = 0
    count_all = 0
    for root, dirs, files in os.walk(dir):
        for name in files:
            if name.endswith("_labels.png"):
                count += 1
                count_all += 1
            elif name.endswith(".png"):
            	count_all+=1


    return count,count_all


# def clean_files(dir):
#     for root, dirs, files in os.walk(dir):
#         for name in files:
#             if not name.endswith("_labels.png") and not name.startswith("."):
#                 os.remove(os.path.abspath(os.path.join(root, name)))


def copytree(src, dst):
    print("Copying files \nfrom {} \nto {}\n".format(src, dst))

    if not os.path.exists(dst):
    	os.makedirs(dst)

    return copyfiles(src,dst,0)

def copyfiles(src,dst,count,symlinks=False,ignore=None):
	
    for item in os.listdir(src):

        if not item.startswith(".") and not item.startswith("Icon"):
            
            s = os.path.join(src, item)
            d = os.path.join(dst, item)
            if os.path.isdir(s):
            	print(item)
            	os.mkdir(d)
            	count += copyfiles(s,d,symlinks,ignore)
            elif item.endswith("_labels.png"):
            	count += 1
            	print(item)
            	shutil.copy2(s,d)
    return count


if __name__ == "__main__":

    if argv[1].lower() == "-h":
        print("\nPython script to copy, count or update dataset ready to upload \nKG\n\nuse:\n\n-h : help\n"
              "dataset_path + -s + sets_numbers: sum up annotations in given sets\n"
              "-dataset_path + -so + sets_numbers: sum up all files in given sets "
              "(used to confirm images count before annotating\n"
              "dataset_path + -c + sets_numbers: copy only files"
              " ending with '_labels.png' to new dataset ending with '_annotated'\n" 
              "if no sets_numbers are provided, all available sets in the dataset are used")


    elif argv[2].lower() == "-s":

        dataset_name = ".\\\\" + argv[1]

        sum = 0

        if len(argv[3:]):
            chosen_sets = argv[3:]
        else:
            chosen_sets = range(40)

        for s in chosen_sets:
            set_number = int(s)
            set_name = "set-{:05.0f}".format(int(set_number))

            src_path = dataset_name +  "\\\\" + set_name
            c,_ = count_files(src_path)
            sum += c
            print("{}:{}".format(set_name,c))
        print("total number {} annotations".format(sum))

    elif argv[2].lower() == "-so":

        dataset_name = ".\\\\" + argv[1]

        annotated_sum = 0
        deleted_sum = 0

        if len(argv[3:]):
            chosen_sets = argv[3:]
        else:
            chosen_sets = range(40)

        for s in chosen_sets:
            set_number = int(s)
            set_name = "set-{:05.0f}".format(int(set_number))

            dst_path = dataset_name + "_annotated" + "\\\\" + set_name

            src_path = dataset_name +  "\\\\" + set_name

            annotated,all = count_files(src_path)
            annotated_sum += annotated
            deleted = all - 2 * annotated
            deleted_sum += deleted
            print("{} - annotated : {}, deleted : {}".format(set_name, annotated,deleted))
        print("total numbers - annotated : {}, deleted : {}".format(annotated_sum,deleted_sum))


    elif argv[2].lower() == "-c":

        dataset_name = ".\\\\" + argv[1]
        total = 0

        for s in argv[3:]:
            set_number = int(s)
            set_name = "set-{:05.0f}".format(int(set_number))
            print(set_name)

            target_src_path = dataset_name + "\\\\" + set_name

            target_dst_path = dataset_name + "_annotated" + "\\\\" + set_name

            total_anotations = copytree(target_src_path,target_dst_path)
            total += total_anotations
            print("---------------------------------------------------------\ntotal anotations from set = {}".format(total_anotations))
        print("---------------------------------------------------------")
        print("---------------------------------------------------------")
        print("total all sets = {}".format(total))